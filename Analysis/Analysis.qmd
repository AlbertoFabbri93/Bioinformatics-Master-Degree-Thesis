---
title: "A study on brain metastases from primary breast cancer"
author: "Alberto Fabbri"
format: html
---

::: {.content-hidden}
### Install the necessary packages
:::

```{r}
#| label: setup
#| include: false

library("data.table")
library("tidyverse")
library("Seurat")
library("pheatmap")
# Replace this future symbols with others because they conflict with the zeallot package
library (future, exclude = c("%->%", "%<-%"));
`%<--%` = future::`%<-%` ;
`%-->%` = future::`%->%` ;
# Parallelize the computation with several worker processes that will run in their own R session
plan("multisession", workers = 6)
# Unpack multiple values without temporary variables
library("zeallot")
library("ggplot2")
library("InSituType")
library("openxlsx")
# Used for the barplots
library("dittoSeq")
# Used to visualize the raw images from AtoMx
library(EBImage)
# Used to annotate images with multiple plots
library(patchwork)
# Sane way to declare file paths
library("here")

# Import utility functions
source("Utils.R")
# Import environment variables as global variables
rds_dir <- Sys.getenv("RDS_DIR")
image_dir <- Sys.getenv("IMAGE_DIR")
image_ext <- Sys.getenv("IMAGE_EXT")
```

## General overview of the data

```{r}
#| label: data-overview
#| echo: false

# Cohort of all the patients
breast_cancer_patients <- readRDS(here(rds_dir, "breast_cancer_patients.rds"))
immunofluorescence <- breast_cancer_patients@meta.data %>% select("Mean.PanCK", "Mean.CD45", "Mean.CD68")
cohort <- fastCohorting(immunofluorescence,
  gaussian_transform = TRUE, n_cohorts = 5
)
# check clusters and cohort numbers
table(cohort)

# List of the gene data (1000-plex RNA)
rownames(breast_cancer_patients)
# Create a data frame to store the table
patient_table <- data.frame(
  Patient_ID = character(),
  Serial_Cores = character(),
  Stamps = character(),
  FOVs = character(),
  stringsAsFactors = FALSE
)

# Iterate over each patient
for (patient_id in sort(unique(unlist(breast_cancer_patients$Patient.ID)))) {
  # Subset the data for the current patient
  patient_data <- subset(x = breast_cancer_patients@meta.data, subset = Patient.ID == patient_id)

  # Get the unique serial cores for the current patient
  serial_cores <- unique(patient_data$core_serial)

  # Iterate over each serial core
  for (serial_core_id in serial_cores) {
    # Subset the data for the current serial core
    serial_core_data <- subset(x = patient_data, subset = core_serial == serial_core_id)

    # Get the unique stamps for the current serial core
    stamps <- unique(serial_core_data$stamp)
    
    # Iterate over each stamp
    for (stamp_id in stamps) {
      # Subset the data for the current stamp
      stamp_data <- subset(x = serial_core_data, subset = stamp == stamp_id)

      # Get the unique FOVs for the current stamp
      fovs <- unique(stamp_data$fov)

      # Add a row to the patient table for each FOV
      for (fov_id in fovs) {
        patient_table <- rbind(patient_table, data.frame(
          Patient_ID = patient_id,
          Serial_Cores = serial_core_id,
          Stamps = stamp_id,
          FOVs = fov_id
        ))
      }
    }
  }
}

# Print the patient table
print(patient_table)
# Print all the patients ID
sort(unique(unlist(breast_cancer_patients$Patient.ID)))

# Print all the FOV
breast_cancer_fovs <- sort(unique(unlist(breast_cancer_patients$fov)))

# Print the number of stamps
length(unique(paste(breast_cancer_patients@meta.data$core_serial, breast_cancer_patients@meta.data$stamp)))
```

### Tissue micro array

```{r}
#| label: plot-breast-cancer-stamps
#| fig-cap: "Visual representation of the tissue micro array with the brain metastases from breast cancer highlighted"
#| fig-alt: "A figure representing a tissue micro array from above where the brain metastases from a primary breast cancer tumor have been highlighted in green while the others have been highlighted in red."

# Print the tissue micro array
# Read the tissue micro array data from a CSV file
tissue_micro_array <- read.csv(gzfile(
  here("Analysis", "flat_files", "LU001FFP03", "LU001FFP03_fov_positions_file.csv.gz")))
breast_cancer_stamps_highlighted <- ggplot(tissue_micro_array, aes(x = X_mm, y = Y_mm)) +
  geom_point(aes(color = FOV %in% breast_cancer_fovs), shape = 15, size = 4) +
  geom_text(aes(label = FOV), size = 1.5) +
  coord_equal() +
  labs(color = "Breast cancer")
print(breast_cancer_stamps_highlighted)
ggsave(here(image_dir, paste0("TMA_breast_cancer_stamps_highlighted", image_ext)))
```

## Clustering per patient

```{r}
#| label: merged-data

patients_rna_data <- list()
```

### Patient 1

```{r}
#| label: analyze-patient-1

# Steps with all the data
patient_1_all_data <- extract_patient_data(breast_cancer_patients, "1")
patient_1_all_data <- analyze_proteins(patient_1_all_data)
patient_1_plots <- generate_proteins_plots(patient_1_all_data, "proteins")

# Red blood cells removed
patient_1_rbc_removed <- remove_clusters(patient_1_all_data, "protein_clusters", c(5))
patient_1_IST_semisup <- run_IST_semisup_extract_data(patient_1_rbc_removed, "Nanostring")
# Add cluster to the metadata
patient_1_rbc_removed$InSituType_semisup_clusters <- patient_1_IST_semisup$clust

# RNA data only
patient_1_data <- extract_patient_rna_data(patient_1_rbc_removed, "Nanostring")
patient_1_data <- normalize_cluster_data(patient_1_data, "RNA")

# Annotations
patient_1_data$RNA_clusters_annotated <- case_match(
  patient_1_data$RNA_clusters,
  c("0", "1", "2", "3") ~ "Tumor",
  "4" ~ "Fibroblast",
  "5" ~ "Macrophage",
  "6" ~ "T.cell",
  "7" ~ "Fibroblast"
)

patient_1_plots <- c(patient_1_plots, generate_rna_plots(patient_1_data, "RNA", "RNA_clusters_annotated"))
patient_1_plots <- c(patient_1_plots, generate_IST_plots(patient_1_data, "RNA", patient_1_IST_semisup))
patient_1_plots <- c(patient_1_plots, generate_comparison_plots(patient_1_data))

# Cleanup and printing
patients_rna_data[[1]] <- patient_1_data
print(patient_1_plots)
```

::: {.content-hidden}
#### Save plots
:::

```{r}
#| label: save-plots-patient-1
#| include: false
#| echo: false
#| eval: false

save_plots(patient_1_plots, get_patient_dir_img("1"), image_ext)
```

### Patient 2

```{r}
#| label: analyze-patient-2

# Steps with all the data
patient_2_all_data <- extract_patient_data(breast_cancer_patients, "2")
patient_2_all_data <- analyze_proteins(patient_2_all_data)
patient_2_plots <- generate_proteins_plots(patient_2_all_data, "proteins")

# Red blood cells removed
patient_2_rbc_removed <- remove_clusters(patient_2_all_data, "protein_clusters", c(6))
patient_2_IST_semisup <- run_IST_semisup_extract_data(patient_2_rbc_removed, "Nanostring")
# Add cluster to the metadata
patient_2_rbc_removed$InSituType_semisup_clusters <- patient_2_IST_semisup$clust

# RNA data only
patient_2_data <- extract_patient_rna_data(patient_2_rbc_removed, "Nanostring")
patient_2_data <- normalize_cluster_data(patient_2_data, "RNA")

# Annotations
patient_2_data$RNA_clusters_annotated <- case_match(
  patient_2_data$RNA_clusters,
  c("0", "1", "2") ~ "Tumor",
  "3" ~ "Fibroblast",
  "4" ~ "Macrophage",
  "5" ~ "Endothelial",
  "6" ~ "T-cell"
)

patient_2_plots <- c(patient_2_plots, generate_rna_plots(patient_2_data, "RNA", "RNA_clusters_annotated"))
patient_2_plots <- c(patient_2_plots, generate_IST_plots(patient_2_data, "RNA", patient_2_IST_semisup))
patient_2_plots <- c(patient_2_plots, generate_comparison_plots(patient_2_data))

# Cleanup and printing
patients_rna_data[[2]] <- patient_2_data
print(patient_2_plots)
```

::: {.content-hidden}
#### Save plots
:::

```{r}
#| label: save-plots-patient-2
#| include: false
#| echo: false
#| eval: false

save_plots(patient_2_plots, get_patient_dir_img("2"), image_ext)
```

### Patient 3

```{r}
#| label: analyze-patient-3

# Steps with all the data
patient_3_all_data <- extract_patient_data(breast_cancer_patients, "3")
patient_3_all_data <- analyze_proteins(patient_3_all_data)
patient_3_plots <- generate_proteins_plots(patient_3_all_data, "proteins")
patient_3_IST_semisup <- run_IST_semisup_extract_data(patient_3_all_data, "Nanostring")
# Add cluster to the metadata
patient_3_all_data$InSituType_semisup_clusters <- patient_3_IST_semisup$clust

# RNA data only
patient_3_data <- extract_patient_rna_data(patient_3_all_data, "Nanostring")
patient_3_data <- normalize_cluster_data(patient_3_data, "RNA")

# Annotations
patient_3_data$RNA_clusters_annotated <- case_match(
  patient_3_data$RNA_clusters,
  c("0", "2", "3") ~ "Tumor",
  "1" ~ "Macrophage",
  c("4", "5", "6", "7") ~ "Fibroblast",
)

patient_3_plots <- c(patient_3_plots, generate_rna_plots(patient_3_data, "RNA", "RNA_clusters_annotated"))
patient_3_plots <- c(patient_3_plots, generate_IST_plots(patient_3_data, "RNA", patient_3_IST_semisup))
patient_3_plots <- c(patient_3_plots, generate_comparison_plots(patient_3_data))

# Cleanup and printing
patients_rna_data[[3]] <- patient_3_data
print(patient_3_plots)
```

::: {.content-hidden}
#### Save plots
:::

```{r}
#| label: save-plots-patient-3
#| include: false
#| echo: false
#| eval: false

save_plots(patient_3_plots, get_patient_dir_img("3"), image_ext)
```

### Patient 4

```{r}
#| label: analyze-patient-4

# Steps with all the data
patient_4_all_data <- extract_patient_data(breast_cancer_patients, "4")
patient_4_all_data <- analyze_proteins(patient_4_all_data)
patient_4_plots <- generate_proteins_plots(patient_4_all_data, "proteins")

# Red blood cells removed
patient_4_rbc_removed <- remove_clusters(patient_4_all_data, "protein_clusters", c(3))
patient_4_IST_semisup <- run_IST_semisup_extract_data(patient_4_rbc_removed, "Nanostring")
# Add cluster to the metadata
patient_4_rbc_removed$InSituType_semisup_clusters <- patient_4_IST_semisup$clust

# RNA data only
patient_4_data <- extract_patient_rna_data(patient_4_rbc_removed, "Nanostring")
patient_4_data <- normalize_cluster_data(patient_4_data, "RNA")

# Annotations
patient_4_data$RNA_clusters_annotated <- case_match(
  patient_4_data$RNA_clusters,
  c("0", "1", "2", "3") ~ "Tumor",
  "4" ~ "Fibroblast",
  "5" ~ "Macrophage",
  "6" ~ "T-cell/Endothelial"
)

patient_4_plots <- c(patient_4_plots, generate_rna_plots(patient_4_data, "RNA", "RNA_clusters_annotated"))
patient_4_plots <- c(patient_4_plots, generate_IST_plots(patient_4_data, "RNA", patient_4_IST_semisup))
patient_4_plots <- c(patient_4_plots, generate_comparison_plots(patient_4_data))

# Cleanup and printing
patients_rna_data[[4]] <- patient_4_data
print(patient_4_plots)
```

::: {.content-hidden}
#### Save plots
:::

```{r}
#| label: save-plots-patient-4
#| include: false
#| echo: false
#| eval: false

save_plots(patient_4_plots, get_patient_dir_img("4"), image_ext)
```

### Patient 5

```{r}
#| label: analyze-patient-5

# Steps with all the data
patient_5_all_data <- extract_patient_data(breast_cancer_patients, "5")
patient_5_all_data <- analyze_proteins(patient_5_all_data)
patient_5_plots <- generate_proteins_plots(patient_5_all_data, "proteins")
patient_5_IST_semisup <- run_IST_semisup_extract_data(patient_5_all_data, "Nanostring")
# Add cluster to the metadata
patient_5_all_data$InSituType_semisup_clusters <- patient_5_IST_semisup$clust

# RNA data only
patient_5_data <- extract_patient_rna_data(patient_5_all_data, "Nanostring")
patient_5_data <- normalize_cluster_data(patient_5_data, "RNA")

# Annotations
patient_5_data$RNA_clusters_annotated <- case_match(
  patient_5_data$RNA_clusters,
  c("0", "1") ~ "Tumor",
  c("2", "4", "5") ~ "Dendritic.cell",
  "3" ~ "Fibroblast",
  "5" ~ "Macrophage",
  "6" ~ "Endothelial/Fibroblast",
  "7" ~ "T-cell/Dendritic.cell",
  "8" ~ "T-cell",
)

patient_5_plots <- c(patient_5_plots, generate_rna_plots(patient_5_data, "RNA", "RNA_clusters_annotated"))
patient_5_plots <- c(patient_5_plots, generate_IST_plots(patient_5_data, "RNA", patient_5_IST_semisup))
patient_5_plots <- c(patient_5_plots, generate_comparison_plots(patient_5_data))

# Cleanup and printing
patients_rna_data[[5]] <- patient_5_data
print(patient_5_plots)
```

::: {.content-hidden}
#### Save plots
:::

```{r}
#| label: save-plots-patient-5
#| include: false
#| echo: false
#| eval: false

save_plots(patient_5_plots, get_patient_dir_img("5"), image_ext)
```

### Patient 6

```{r}
#| label: analyze-patient-6

# Steps with all the data
patient_6_all_data <- extract_patient_data(breast_cancer_patients, "6")
patient_6_all_data <- analyze_proteins(patient_6_all_data)
patient_6_plots <- generate_proteins_plots(patient_6_all_data, "proteins")
patient_6_IST_semisup <- run_IST_semisup_extract_data(patient_6_all_data, "Nanostring")
# Add cluster to the metadata
patient_6_all_data$InSituType_semisup_clusters <- patient_6_IST_semisup$clust

# RNA data only
patient_6_data <- extract_patient_rna_data(patient_6_all_data, "Nanostring")
patient_6_data <- normalize_cluster_data(patient_6_data, "RNA")

# Annotations
patient_6_data$RNA_clusters_annotated <- case_match(
  patient_6_data$RNA_clusters,
  c("0", "1", "2", "4") ~ "Tumor",
  "3" ~ "Fibroblasts/Endothelial",
  "5" ~ "Macrophage",
)

patient_6_plots <- c(patient_6_plots, generate_rna_plots(patient_6_data, "RNA", "RNA_clusters_annotated"))
patient_6_plots <- c(patient_6_plots, generate_IST_plots(patient_6_data, "RNA", patient_6_IST_semisup))
patient_6_plots <- c(patient_6_plots, generate_comparison_plots(patient_6_data))

# Cleanup and printing
patients_rna_data[[6]] <- patient_6_data
print(patient_6_plots)
```

::: {.content-hidden}
#### Save plots
:::

```{r}
#| label: save-plots-patient-6
#| include: false
#| echo: false
#| eval: false

save_plots(patient_6_plots, get_patient_dir_img("6"), image_ext)
```

### Patient 7

```{r}
#| label: analyze-patient-7

# Steps with all the data
patient_7_all_data <- extract_patient_data(breast_cancer_patients, "7")
patient_7_all_data <- analyze_proteins(patient_7_all_data)
patient_7_plots <- generate_proteins_plots(patient_7_all_data, "proteins")

# Red blood cells removed
patient_7_rbc_removed <- remove_clusters(patient_7_all_data, "protein_clusters", c(7))
patient_7_IST_semisup <- run_IST_semisup_extract_data(patient_7_rbc_removed, "Nanostring")
# Add cluster to the metadata
patient_7_rbc_removed$InSituType_semisup_clusters <- patient_7_IST_semisup$clust

# RNA data only
patient_7_data <- extract_patient_rna_data(patient_7_rbc_removed, "Nanostring")
patient_7_data <- normalize_cluster_data(patient_7_data, "RNA")

# Annotations
patient_7_data$RNA_clusters_annotated <- case_match(
  patient_7_data$RNA_clusters,
  c("0", "1", "2", "3") ~ "Tumor",
  "4" ~ "T-cell/Dendritic.cell",
  "5" ~ "Dendritic.cell",
  "6" ~ "Dendritic.cell",
  "7" ~ "Fibroblast/Endothelial",
  "8" ~ "Fibroblast"
)

patient_7_plots <- c(patient_7_plots, generate_rna_plots(patient_7_data, "RNA", "RNA_clusters_annotated"))
patient_7_plots <- c(patient_7_plots, generate_IST_plots(patient_7_data, "RNA", patient_7_IST_semisup))
patient_7_plots <- c(patient_7_plots, generate_comparison_plots(patient_7_data))

# Cleanup and printing
patients_rna_data[[7]] <- patient_7_data
print(patient_7_plots)
```

::: {.content-hidden}
#### Save plots
:::

```{r}
#| label: save-plots-patient-7
#| include: false
#| echo: false
#| eval: false

save_plots(patient_7_plots, get_patient_dir_img("7"), image_ext)
```

## Comparing patients

```{r}
#| label: compare-patients

# Save plots comparing patients in this subfolder
compare_patients_subfolder <- here(image_dir, "Compare_patients")

# Create folder for the plots id it does not exist
if (!dir.exists(compare_patients_subfolder)) {
  dir.create(compare_patients_subfolder, recursive = TRUE)
}

# Merge all the Seurat objects together
combined_patients <- patients_rna_data[[1]]
combined_patients <- RenameCells(combined_patients, add.cell.id = "Patient_1")
for (i in 2:length(patients_rna_data)) {
  # Provide a unique identifier for each object
  seurat_obj <- RenameCells(patients_rna_data[[i]], add.cell.id = paste0("Patient_", i))
  combined_patients <- merge(combined_patients, y = seurat_obj, merge.data = TRUE)
}

barplot_cluster_var = "InSituType_semisup_clusters"
barplot_color_lookup_table <- generate_colors_lookup_table(combined_patients, barplot_cluster_var, known_clusters_colors)
# Plot a barplot comparing the InSituTypeID clusters of all patients
dittoBarPlot(combined_patients,
             var = barplot_cluster_var,
             group.by = "Patient.ID",
             color.panel = barplot_color_lookup_table) +
    guides(fill = guide_legend(ncol = 2, byrow = TRUE))
ggsave(paste0(compare_patients_subfolder, "/InSituType_clusters_all_patients_barplot", image_ext))
```
